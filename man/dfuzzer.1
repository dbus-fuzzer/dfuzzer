.\" **************************************************************************
.\" *
.\" * dfuzzer
.\" * Copyright(C) 2014,2015, Red Hat, Inc.
.\" *     Matus Marhefka <mmarhefk@redhat.com>
.\" *
.\" * This program is free software: you can redistribute it and/or modify
.\" * it under the terms of the GNU General Public License as published by
.\" * the Free Software Foundation, either version 3 of the License, or
.\" * (at your option) any later version.
.\" *
.\" * This program is distributed in the hope that it will be useful,
.\" * but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
.\" * GNU General Public License for more details.
.\" *
.\" * You should have received a copy of the GNU General Public License
.\" * along with this program. If not, see <http://www.gnu.org/licenses/>.
.\" *
.\" **************************************************************************
.TH man 1 "12 Mar 2015" "dfuzzer 1.4" "dfuzzer"
.SH NAME
dfuzzer \- Tool for fuzz testing processes communicating through D-Bus
.SH SYNOPSIS
.B dfuzzer
.B \-n
\fIBUS_NAME\fR
[\fIOTHER_OPTIONS\fR]



.SH DESCRIPTION
\fBdfuzzer\fR is the D-Bus fuzzer, the tool for fuzz testing processes communicating
through D-Bus. It can be used to test processes connected to both, the session
bus and the system bus daemon. The fuzzer works as a client, it first connects
to the bus daemon and then it traverses and fuzz tests all the methods provided
by a D-Bus service (specified by the -n option - bus name). By default only
failures and warnings are printed. Use -v for verbose mode.

Fuzz tests are performed on methods of a chosen interface(s) and an object(s)
for the given bus name. Fuzzer generates random arguments for each method
of an interface and calls these methods everytime with different generated arguments.

dfuzzer is monitoring tested process state and memory usage during fuzz testing.
In case tested process crashed or its memory usage is abnormal it is printed
on the output of dfuzzer. Fuzzer always prints exit status (see section
\fBEXIT STATUS\fR) before exiting.

When you are getting exceptions (printed only in verbose mode: \fB-v\fR option)
like \fBorg.freedesktop.DBus.Error.AccessDenied\fR or
\fBorg.freedesktop.DBus.Error.AuthFailed\fR during testing, try
to run dfuzzer as root (warning: this is dangerous, proceed with caution).



.SH REQUIRED OPTIONS
.PP
\fB\-n\fR, \fB\-\-bus=\fIBUS_NAME\fR
.RS 4
D-Bus name to test.
.RE



.SH OTHER OPTIONS
.PP
\fB\-V\fR, \fB\-\-version\fR
.RS 4
Print dfuzzer version and exit.
.RE
.PP
\fB\-h\fR, \fB\-\-help\fR
.RS 4
Print dfuzzer help and exit.
.RE
.PP
\fB\-l\fR, \fB\-\-list\fR
.RS 4
List all available connection names on both buses.
.RE
.PP
\fB\-v\fR, \fB\-\-verbose\fR
.RS 4
Enable verbose messages.
.RE
.PP
\fB\-d\fR, \fB\-\-debug\fR
.RS 4
Enable debug messages. Implies -v. This option should not be normally used
during testing.
.RE
.PP
\fB\-L\fR, \fB\-\-log\-dir=\fIDIRNAME\fR
.RS 4
Optional directory for full, machine-readable CSV log output. The directory
must exist.
.RE
.PP
\fB\-s\fR, \fB\-\-no\-suppressions\fR
.RS 4
Do not use suppression file. Default behaviour is to use suppression
files in this order (if one doesn't exist next in order is taken for loading
suppressions - this way user can define his own file):
.RE
    1. \fI./dfuzzer.conf\fR
.RE
    2. \fI~/.dfuzzer.conf\fR
.RE
    3. \fI/etc/dfuzzer.conf\fR
.RE
    Suppression files must be defined in this format:
.RE
    [bus_name_1]
.RE
    method0 description
.RE
    [bus_name_2]
.RE
    method1 description
.RE
    method2 description
.RE
    ...
.RE
.RS 4
which tells that for example methods \fImethod1\fR and \fImethod2\fR will be
skipped when testing bus name \fIbus_name_2\fR.
.RE
.PP
\fB\-o\fR, \fB\-\-object=\fIPATH\fR
.RS 4
Optional object path to test. All children objects are traversed.
.RE
.PP
\fB\-i\fR, \fB\-\-interface=\fIINTERFACE\fR
.RS 4
Interface to test. Requires also -o option.
.RE
.PP
\fB\-m\fR, \fB\-\-mem\-limit=\fISIZE\fR [in kB]
.RS 4
When tested process exceeds this limit, warning is printed on the output.
Default value for this limit is 3x process intial memory size. If set memory
limit value is less than or equal to process initial memory size, it will be
adjusted to the default value (3x process intial memory size).
.RE
.PP
\fB\-b\fR, \fB\-\-buffer\-limit=\fISIZE\fR [in B]
.RS 4
Maximum buffer size for generated strings, minimal value for this option is
256 B. Default maximum size is 50000 B ~= 50 kB (the greater the limit,
the longer the testing).
.RE
.PP
\fB\-t\fR, \fB\-\-method=\fINAME\fR
.RS 4
When this parameter is provided, only method \fIMETHOD_NAME\fR is tested.
All other methods of an interface are skipped. Requires also -o and -i options.
.RE
.PP
\fB\-e\fR, \fB\-\-command=\fI'COMMAND'\fR
.RS 4
Command/Script to execute after each method call. If command/script
finished unsuccessfully, fail message is printed with its return
value.
.RE



.SH EXAMPLES
List all names on bus:
.RE
\fB# dfuzzer -l\fR

Test all methods of GNOME Shell. Be verbose.
.RE
\fB# dfuzzer -v -n org.gnome.Shell\fR

Test only method of the given bus name, object path and interface:
.RE
\fB# dfuzzer -n org.freedesktop.Avahi -o / -i org.freedesktop.Avahi.Server -t GetAlternativeServiceName\fR

Test all methods of Avahi and be verbose. Redirect all log messages including
failures and warnings into avahi.log:
.RE
\fB# dfuzzer -v -n org.freedesktop.Avahi 2>&1 | tee avahi.log\fR

Test name org.freedesktop.Avahi, be verbose and do not use suppression file:
.RE
\fB# dfuzzer -v -s -n org.freedesktop.Avahi\fR



.SH EXIT STATUS
dfuzzer may return these codes:

0    testing ended successfuly
.RE
1    error occured, either internal dfuzzer error
     or D-Bus related error (-d option to debug)
.RE
2    testing detected failures (including warnings)
.RE
3    testing detected only warnings
.RE



.SH SEE ALSO
gdbus(1)



.SH BUGS
No known bugs. Report bugs to \fImmarhefk@redhat.com\fR.



.SH AUTHOR
Matus Marhefka (mmarhefk@redhat.com)
.RE
Additional changes by Miroslav Vadkerti (mvadkert@redhat.com)



.SH COPYRIGHT
2014,2015 Red Hat, Inc.
